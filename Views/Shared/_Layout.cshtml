<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - MiniMart</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <!-- Font Awesome CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <!-- Custom CSS -->
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-lg navbar-light bg-white border-bottom box-shadow">
            <div class="container-fluid">
                <!-- Logo -->
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index" title="Trang chủ">
                    <img src="~/images/MiniMartlogo.png" alt="MiniMart Logo">
                </a>

                <!-- Toggler -->
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <!-- Navbar Content -->
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <!-- Menu Link (Trigger Hover - ID quan trọng) -->
                    <a id="menuToggleLink" class="navbar-menu-link d-none d-lg-flex me-3" href="#" role="button">
                        <i class="fas fa-bars me-1"></i> Menu
                    </a>

                    <!-- Search Form -->
                    <form class="d-flex search-form my-2 my-lg-0 flex-grow-1" role="search" asp-controller="Product" asp-action="Search">
                        <input class="form-control me-2" type="search" placeholder="Tìm kiếm sản phẩm..." aria-label="Search" name="keyword">
                        <button class="btn btn-warning" type="submit">
                            <i class="fas fa-search text-white"></i>
                        </button>
                    </form>

                    <!-- Icons -->
                    <ul class="navbar-nav navbar-icons d-flex flex-row align-items-center ms-lg-auto">
                        <li class="nav-item me-3">
                            <a class="nav-link" asp-controller="Cart" asp-action="Index" title="Giỏ hàng">
                                <i class="fas fa-shopping-cart fa-lg"></i>
                            </a>
                        </li>
                        <li class="nav-item me-3">
                            <a class="nav-link" asp-controller="Notification" asp-action="Index" title="Thông báo">
                                <i class="fas fa-bell fa-lg"></i>
                            </a>
                        </li>
                        <!-- Account Trigger (Click - ID quan trọng) -->
                        <li class="nav-item">
                            <a id="accountDropdownToggle" class="nav-link d-flex align-items-center" href="#" role="button" title="Tài khoản">
                                <i class="fas fa-user-circle fa-lg"></i>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <!-- Popup Menu Sidebar (NGOÀI HEADER) -->
    <div id="menuSidebar" class="popup-menu shadow-sm">
        <ul class="list-group list-group-flush">
            <li class="list-group-item">
                <a asp-controller="Categories" asp-action="Index" class="sidebar-link">Loại sản phầm</a>
            </li>
            <li class="list-group-item">
                <a asp-controller="Product" asp-action="Index" class="sidebar-link">Product</a>
            </li>
            <li class="list-group-item">
                <a asp-controller="ProductTypes" asp-action="Index" class="sidebar-link">Loại hàng hóa</a>
            </li>
            <li class="list-group-item">
                <a asp-controller="Supplier" asp-action="Index" class="sidebar-link">Supplier</a>
            </li>
        </ul>
    </div>

    <!-- Popup Account Dropdown (NGOÀI HEADER) -->
    <ul id="accountDropdownMenu" class="popup-menu shadow-sm">
        <!-- Bỏ list-style và padding bằng CSS -->
        <li class="dropdown-header text-center">Xin chào!</li>
        <li><hr class="dropdown-divider"></li>
        <li><a class="dropdown-item" asp-controller="Account" asp-action="Profile"><i class="fas fa-user me-2"></i>Thông tin cá nhân</a></li>
        <li><a class="dropdown-item" asp-controller="Order" asp-action="History"><i class="fas fa-receipt me-2"></i>Hóa đơn</a></li>
        <li><a class="dropdown-item" asp-controller="Employees" asp-action="Index"><i class="fas fa-user-tie me-2"></i>Quản lý nhân viên</a></li>
        <li><a class="dropdown-item" asp-controller="Customers" asp-action="Index"><i class="fas fa-users me-2"></i>Quản lý khách hàng</a></li>
        <li><hr class="dropdown-divider"></li>
        <li><a class="dropdown-item" asp-controller="Account" asp-action="Logout"><i class="fas fa-sign-out-alt me-2"></i>Đăng xuất</a></li>
    </ul>

    <!-- Main Content -->
    <div class="container main-container my-4">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <!-- Footer -->
    <footer class="footer mt-auto py-4 bg-light text-muted">
        <div class="container">
            <div class="row gy-4">
                <div class="col-lg-7 col-md-6">
                    <h5 class="mb-3">Thông tin liên hệ</h5>
                    <ul class="list-unstyled">
                        <li class="mb-2">
                            <i class="fas fa-phone fa-fw me-2"></i> Hotline: <a href="tel:0123456789">0123 456 789</a>
                        </li>
                        <li class="mb-2">
                            <i class="fas fa-envelope fa-fw me-2"></i> Email: <a href="mailto:siuers@siu.edu.vn">siuers@siu.edu.vn</a>
                        </li>
                        <li class="mb-2">
                            <i class="fas fa-map-marker-alt fa-fw me-2"></i> Địa chỉ: 8C Tống Hữu Định, Phường Thảo Điền, Quận 2, TP Hồ Chí Minh
                        </li>
                    </ul>
                </div>
                <div class="col-lg-4 col-md-6 offset-lg-1">
                    <h5 class="mb-3">Về chúng tôi</h5>
                    <ul class="list-unstyled">
                        <li class="mb-2">
                            <a asp-area="" asp-controller="Home" asp-action="About" class="footer-link">Giới thiệu</a>
                        </li>
                        <li class="mb-2">
                            <a asp-area="" asp-controller="Home" asp-action="Terms" class="footer-link">Điều khoản sử dụng</a>
                        </li>
                        <li class="mb-2">
                            <a asp-area="" asp-controller="Home" asp-action="Privacy" class="footer-link">Chính sách bảo mật</a>
                        </li>
                    </ul>
                </div>
            </div>
            <hr class="my-4">
            <div class="row">
                <div class="col-12 text-center">
                    <p class="mb-0 small">© @DateTime.Now.Year Bản quyền thuộc về Minimart.</p>
                </div>
            </div>
        </div>
    </footer>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>

    <!-- Custom JavaScript (Hover for Menu, Click for Account, Right Align Account) -->
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const navbar = document.querySelector('nav.navbar');
            const popupVisibleClass = 'popup-visible';
            const hideDelay = 200; // For hover menu

            let activePopupHandlers = [];

            function createPopupHandler(config) {
                const { triggerElement, popupElement, positionFunction, interactionType = 'click' } = config;

                if (!triggerElement || !popupElement || !navbar) {
                    console.error(`Popup handler setup failed: Trigger=${!!triggerElement}, Popup=${!!popupElement}, Navbar=${!!navbar}. Missing element for popup ID: ${popupElement?.id}`);
                    if (!triggerElement) console.error(`Trigger element for popup ${popupElement?.id} not found.`);
                    if (!popupElement) console.error(`Popup element itself not found.`);
                    return null;
                }

                let leaveTimeout;
                let isVisible = false;

                const updateVisibility = () => {
                    isVisible = popupElement.classList.contains(popupVisibleClass);
                };

                const show = () => {
                    activePopupHandlers.forEach(handler => {
                        if (handler && handler.popupElement !== popupElement) {
                            handler.hide(true);
                        }
                    });
                    clearTimeout(leaveTimeout);
                    if (positionFunction) {
                        positionFunction(triggerElement, popupElement, navbar);
                    }
                    popupElement.classList.add(popupVisibleClass);
                    updateVisibility();
                };

                const hide = (immediate = false) => {
                    clearTimeout(leaveTimeout);
                    if (immediate) {
                        popupElement.classList.remove(popupVisibleClass);
                        updateVisibility();
                    } else {
                        leaveTimeout = setTimeout(() => {
                            popupElement.classList.remove(popupVisibleClass);
                            updateVisibility();
                        }, hideDelay);
                    }
                };

                const toggle = (e) => {
                    e.preventDefault();
                    if (isVisible) {
                        hide(true);
                    } else {
                        show();
                    }
                };

                // --- Event Listeners ---
                if (interactionType === 'click') {
                    triggerElement.addEventListener('click', toggle);
                }
                else if (interactionType === 'hover') {
                    triggerElement.addEventListener('mouseenter', show);
                    triggerElement.addEventListener('mouseleave', () => hide(false));
                    popupElement.addEventListener('mouseenter', () => clearTimeout(leaveTimeout));
                    popupElement.addEventListener('mouseleave', () => hide(false));
                }

                return {
                    triggerElement, popupElement, show, hide, toggle,
                    position: () => { if (positionFunction) positionFunction(triggerElement, popupElement, navbar); },
                    get isVisible() { updateVisibility(); return isVisible; }
                };
            }

            // --- Định vị ---
            const positionMenuSidebar = (trigger, popup, nav) => {
                if (!trigger || !popup || !nav) return;
                const navRect = nav.getBoundingClientRect();
                const linkRect = trigger.getBoundingClientRect();
                popup.style.position = 'fixed';
                popup.style.top = `${navRect.bottom + 1}px`;
                popup.style.left = `${linkRect.left + window.scrollX}px`;
                popup.style.right = 'auto';
                popup.style.transform = 'translateY(0)';
            };

            const positionAccountDropdown = (trigger, popup, nav) => {
                if (!trigger || !popup || !nav) return;
                const navRect = nav.getBoundingClientRect();
                popup.style.position = 'fixed';
                popup.style.top = `${navRect.bottom + 1}px`;

                const rightMargin = 10; // Khoảng cách lề phải (đổi thành 0 nếu muốn sát)
                popup.style.right = `${rightMargin}px`;
                popup.style.left = 'auto'; // Quan trọng

                popup.style.transform = 'translateY(0)';
                // console.log(`Account Dropdown Positioned: top=${popup.style.top}, left=${popup.style.left || 'auto'}, right=${popup.style.right || 'auto'}`);
            };


            // --- Khởi tạo ---
            const menuHandler = createPopupHandler({
                triggerElement: document.getElementById('menuToggleLink'),
                popupElement: document.getElementById('menuSidebar'),
                positionFunction: positionMenuSidebar,
                interactionType: 'hover'
            });

            const accountHandler = createPopupHandler({
                triggerElement: document.getElementById('accountDropdownToggle'),
                popupElement: document.getElementById('accountDropdownMenu'),
                positionFunction: positionAccountDropdown,
                interactionType: 'click'
            });

            if (menuHandler) activePopupHandlers.push(menuHandler);
            if (accountHandler) activePopupHandlers.push(accountHandler);

            // --- Click Outside ---
            document.addEventListener('click', function (event) {
                const clickedOnActiveTriggerOrPopup = activePopupHandlers.some(handler =>
                    handler && handler.isVisible && (handler.triggerElement.contains(event.target) || handler.popupElement.contains(event.target))
                );
                if (!clickedOnActiveTriggerOrPopup) {
                    activePopupHandlers.forEach(handler => {
                        if (handler && handler.isVisible) handler.hide(true);
                    });
                }
            }, true);

            // --- Resize ---
            let resizeTimeout;
            window.addEventListener('resize', () => {
                clearTimeout(resizeTimeout);
                resizeTimeout = setTimeout(() => {
                    activePopupHandlers.forEach(handler => {
                        if (handler && handler.isVisible) handler.position();
                    });
                }, 100);
            });

        });
    </script>

    <!-- Optional: Custom site-specific JavaScript -->
    <script src="~/js/site.js" asp-append-version="true"></script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>